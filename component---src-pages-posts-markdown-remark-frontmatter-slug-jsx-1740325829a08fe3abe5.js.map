{"version":3,"file":"component---src-pages-posts-markdown-remark-frontmatter-slug-jsx-1740325829a08fe3abe5.js","mappings":"qNAKe,SAASA,EAAgBC,GAEpC,IAFqC,KACvCC,GACDD,EACC,MAAM,eAAEE,GAAmBD,GACrB,YAAEE,EAAW,KAAEC,EAAI,gBAAEC,GAAoBH,GACzC,IAAEI,EAAG,cAAEC,EAAa,MAAEC,EAAK,OAAEC,GAAWN,EAAYO,KAC1D,OACEC,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAACE,EAAAA,EAAM,CAACC,MAAUX,EAAYW,MAAK,MAAMC,EAAAA,EAAOC,YAEhDL,EAAAA,cAAA,UAAQC,UAAU,kBAChBD,EAAAA,cAAA,UAAKR,EAAYW,OACjBH,EAAAA,cAAA,WAASC,UAAU,WAChBN,GAAOK,EAAAA,cAAA,KAAGM,wBAAyB,CAAEC,OAAQZ,KAC7CC,GACCI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,UAAKJ,EAAcY,MAAM,KAAKC,KAAI,CAACC,EAAMC,IACvCX,EAAAA,cAAA,MAAIY,IAAKD,GAAID,OAIlBb,GACCG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAAA,UAAKH,EAAMW,MAAM,KAAKC,KAAI,CAACC,EAAMC,IAC/BX,EAAAA,cAAA,MAAIY,IAAKD,GAAID,OAIlBZ,GACCE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAI,iDACJA,EAAAA,cAAA,UAAKF,EAAOU,MAAM,KAAKC,KAAI,CAACC,EAAMC,IAChCX,EAAAA,cAAA,MAAIY,IAAKD,GAAID,SAOvBV,EAAAA,cAAA,QAAMC,UAAU,QACdD,EAAAA,cAAA,SAAOC,UAAU,aACfD,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,OAAKC,UAAU,MAAMK,wBAAyB,CAAEC,OAAQb,OAG5DM,EAAAA,cAAA,WAASC,UAAU,YAAYK,wBAAyB,CAAEC,OAAQd,MAI1E,C","sources":["webpack://chandrashekhar-tripathi/./src/pages/posts/{markdownRemark.frontmatter__slug}.jsx"],"sourcesContent":["import React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport config from \"../../utils/config\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nexport default function BlogPostTemplate({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html, tableOfContents } = markdownRemark\r\n  const { txt, prerequisites, setup, lesson } = frontmatter.hero\r\n  return (\r\n    <div className=\"blog-component\">\r\n      <Helmet title={`${frontmatter.title} | ${config.siteTitle}`} />\r\n\r\n      <header className=\"head-container\">\r\n        <h1>{frontmatter.title}</h1>\r\n        <section className=\"segment\">\r\n          {txt && <p dangerouslySetInnerHTML={{ __html: txt }}></p>}\r\n          {prerequisites && (\r\n            <>\r\n              <h4>Prerequisites</h4>\r\n              <ul>{prerequisites.split(';').map((item, i) => (\r\n                <li key={i}>{item}</li>\r\n              ))}</ul>\r\n            </>\r\n          )}\r\n          {setup && (\r\n            <>\r\n              <h4>What you'll need</h4>\r\n              <ul>{setup.split(';').map((item, i) => (\r\n                <li key={i}>{item}</li>\r\n              ))}</ul>\r\n            </>\r\n          )}\r\n          {lesson && (\r\n            <>\r\n              <h4>After reading this article, you'll be able to</h4>\r\n              <ul>{lesson.split(';').map((item, i) => (\r\n                <li key={i}>{item}</li>\r\n              ))}</ul>\r\n            </>\r\n          )}\r\n        </section>\r\n      </header>\r\n\r\n      <main className=\"grid\">\r\n        <aside className=\"container\">\r\n          <div className=\"toc-sidebar\">\r\n            <h2>Table of contents</h2>\r\n            <div className=\"toc\" dangerouslySetInnerHTML={{ __html: tableOfContents }} />\r\n          </div>\r\n        </aside>\r\n        <article className=\"container\" dangerouslySetInnerHTML={{ __html: html }} />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      tableOfContents(\r\n        maxDepth: 3\r\n      )\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        hero {\r\n          txt\r\n          prerequisites\r\n          setup\r\n          lesson\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["BlogPostTemplate","_ref","data","markdownRemark","frontmatter","html","tableOfContents","txt","prerequisites","setup","lesson","hero","React","className","Helmet","title","config","siteTitle","dangerouslySetInnerHTML","__html","split","map","item","i","key"],"sourceRoot":""}