{"version":3,"file":"component---src-pages-posts-js-55202ac3af5775279691.js","mappings":"qJAAA,MAAMA,EAAWC,GAEbA,IACA,GAAGA,GAAMC,MACL,sEACCC,KAAKC,GAAMA,EAAEC,gBACfC,KAAK,I,sGCHZ,MAAMC,EAAU,IAAoD,IAAnD,GAAEC,EAAE,MAAEC,EAAK,SAAEC,EAAQ,QAAEC,EAAO,YAAEC,GAAa,EAC5D,OACE,uBAAKC,UAAU,mBACb,sBAAIL,GAAIA,GACN,qBAAGM,KAAI,IAAMN,GAAOC,IAErBE,GACC,qBAAGE,UAAU,SAASC,KAAMH,EAASI,OAAO,SAASC,IAAI,cAAcJ,GAExEF,GACC,gBAAC,EAAAO,KAAI,CAACJ,UAAU,SAASK,GAAIR,GAAS,YAEpC,EAIJS,EAAY,IAAoB,IAAD,MAAlB,GAAEX,EAAE,MAAEC,GAAO,EAE9B,OADAD,EAAO,QAAL,EAAGA,SAAE,QAAI,GAET,0BAAQK,UAAU,kBAChB,sBAAIL,GAAIA,GACLA,EAAK,qBAAGM,KAAI,IAAMN,GAAOC,GAAa,gCAAGA,IAErC,C,8FCnBb,MAAMW,EAAe,QAAC,MAAEX,EAAK,KAAEY,GAAM,SACnC,gBAAC,EAAAJ,KAAI,CAACJ,UAAU,OAAOK,GAAE,MAAOlB,EAAAA,EAAAA,GAAQS,IACtC,0BAAKA,GACL,4BAAOY,GACF,EAsDT,UAnDc,IAAe,IAAd,KAAEC,GAAM,EACrB,MAAM,kBAAEC,GAAsBD,EAKxBE,EAJQD,EAAkBE,MAAMtB,KAAIuB,GAAQA,EAAKC,KAAKC,cAIlCC,QAAO,CAACC,EAAKC,KACrC,MAAMC,EAAOD,EAAKC,KAGlB,OAFKF,EAAIE,KAAOF,EAAIE,GAAQ,IAC5BF,EAAIE,GAAMC,KAAKF,GACRD,CAAG,GACT,CAAC,GAEJ,OACE,uBAAKjB,UAAU,mBACb,gBAAC,IAAM,CAACJ,MAAK,WAAayB,EAAAA,EAAAA,YAC1B,gBAAC,IAAS,CAAC1B,GAAG,QAAQC,MAAM,UAC3B0B,OAAOC,KAAKZ,GAAaa,MAAK,CAACC,EAAGC,IAAOA,EAAID,IAAInC,KAAI6B,GACpD,2BAASnB,UAAU,YAAY2B,IAAKR,GAClC,sBAAInB,UAAU,QAAQmB,GACtB,uBAAKnB,UAAU,SACZW,EAAYQ,GAAM7B,KAAI4B,GACrB,gBAACX,EAAY,CAACoB,IAAKT,EAAKtB,MAAOA,MAAOsB,EAAKtB,MAAOY,KAAMU,EAAKV,aAKjE,C","sources":["webpack://homepage-react/./src/utils/helpers.ts","webpack://homepage-react/./src/components/Heading.js","webpack://homepage-react/./src/pages/posts.js"],"sourcesContent":["const slugify = (str: string) => {\n  return (\n    str &&\n    `${str}`.match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )!.map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n\nconst capitalize = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\nexport { capitalize, slugify }","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Heading = ({ id, title, pageLink, extLink, extLinkText }) => {\n  return (\n    <div className=\"section-heading\">\n      <h2 id={id}>\n        <a href={`#${id}`}>{title}</a>\n      </h2>\n      {extLink && (\n        <a className=\"button\" href={extLink} target=\"_blank\" rel=\"noreferrer\">{extLinkText}</a>\n      )}\n      {pageLink && (\n        <Link className=\"button\" to={pageLink}>View all</Link>\n      )}\n    </div>\n  )\n}\n\nconst PageTitle = ({ id, title }) => {\n  id = id ?? '';\n  return (\n    <header className=\"head-container\">\n      <h1 id={id}>\n        {id ? <a href={`#${id}`}>{title}</a> : <>{title}</>}\n      </h1>\n    </header>\n  )\n}\n\nexport {Heading, PageTitle};","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport config from \"../utils/config\"\nimport { Link, graphql } from \"gatsby\"\nimport { PageTitle } from \"../components/Heading\"\nimport { slugify } from \"../utils/helpers\"\n\nconst PostListItem = ({ title, date }) => (\n  <Link className=\"post\" to={`./${slugify(title)}`}>\n    <h3>{title}</h3>\n    <time>{date}</time>\n  </Link>\n)\n\nconst Posts = ({ data }) => {\n  const { allMarkdownRemark } = data;\n  const posts = allMarkdownRemark.edges.map(edge => edge.node.frontmatter);\n\n  // map over posts to categorize posts according to year where year is in descending order\n  // years is an array of years in descending order\n  const postsByYear = posts.reduce((acc, post) => {\n    const year = post.year;\n    if (!acc[year]) acc[year] = [];\n    acc[year].push(post);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"posts-component\">\n      <Helmet title={`Posts | ${config.siteTitle}`} />\n      <PageTitle id='posts' title='Posts' />\n      {Object.keys(postsByYear).sort((a, b) => (b - a)).map(year => (\n        <section className=\"container\" key={year}>\n          <h2 className=\"year\">{year}</h2>\n          <div className=\"posts\">\n            {postsByYear[year].map(post => (\n              <PostListItem key={post.title} title={post.title} date={post.date} />\n            ))}\n          </div>\n        </section>\n      ))}\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/\" } },\n      sort:{frontmatter: {date:DESC} }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMM DD\")\n            year:date(formatString:\"YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Posts"],"names":["slugify","str","match","map","x","toLowerCase","join","Heading","id","title","pageLink","extLink","extLinkText","className","href","target","rel","Link","to","PageTitle","PostListItem","date","data","allMarkdownRemark","postsByYear","edges","edge","node","frontmatter","reduce","acc","post","year","push","config","Object","keys","sort","a","b","key"],"sourceRoot":""}