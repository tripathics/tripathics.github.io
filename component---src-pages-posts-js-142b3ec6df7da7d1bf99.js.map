{"version":3,"file":"component---src-pages-posts-js-142b3ec6df7da7d1bf99.js","mappings":"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","sources":["webpack://chandrashekhar-tripathi/./src/utils/helpers.ts","webpack://chandrashekhar-tripathi/./src/components/Heading.js","webpack://chandrashekhar-tripathi/./src/pages/posts.js","webpack://chandrashekhar-tripathi/./src/utils/config.js"],"sourcesContent":["const slugify = (str: string) => {\n  return (\n    str &&\n    `${str}`.match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )!.map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n\nconst capitalize = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\nexport { capitalize, slugify }","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Heading = ({ id, title, pageLink, extLink, extLinkText }) => {\n  return (\n    <div className=\"section-heading\">\n      <h2 id={id}>\n        <a href={`#${id}`}>{title}</a>\n      </h2>\n      {extLink && (\n        <a className=\"button\" href={extLink} target=\"_blank\" rel=\"noreferrer\">{extLinkText}</a>\n      )}\n      {pageLink && (\n        <Link className=\"button\" to={pageLink}>View all</Link>\n      )}\n    </div>\n  )\n}\n\nconst PageTitle = ({ id, title }) => {\n  id = id ?? '';\n  return (\n    <header className=\"head-container\">\n      <h1 id={id}>\n        {id ? <a href={`#${id}`}>{title}</a> : <>{title}</>}\n      </h1>\n    </header>\n  )\n}\n\nexport {Heading, PageTitle};","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport config from \"../utils/config\"\nimport { Link, graphql } from \"gatsby\"\nimport { PageTitle } from \"../components/Heading\"\nimport { slugify } from \"../utils/helpers\"\n\nconst PostListItem = ({ title, date }) => (\n  <Link className=\"post\" to={`./${slugify(title)}`}>\n    <h3>{title}</h3>\n    <time>{date}</time>\n  </Link>\n)\n\nconst Posts = ({ data }) => {\n  const { allMarkdownRemark } = data;\n  const posts = allMarkdownRemark.edges.map(edge => edge.node.frontmatter);\n\n  const [tagFilter, setTagFilter] = React.useState(null);\n\n  const postsByYear = posts.reduce((acc, post) => {\n    const year = post.year;\n    if (!acc[year]) acc[year] = [];\n    acc[year].push(post);\n    return acc;\n  }, {});\n\n  const tags = posts.reduce((acc, post) => {\n    const tags = post.tags || [];\n    tags.forEach(tag => {\n      if (!acc.includes(tag)) acc.push(tag);\n    });\n    return acc;\n  }, []).sort();\n\n  return (\n    <div className=\"posts-component\">\n      <Helmet title={`Posts | ${config.siteTitle}`} />\n      <PageTitle id='posts' title='Posts' />\n      <div className='tags-filter container'>\n        <h3>Filter by tag</h3>\n        <div className='tags'>\n          <button className={`tag ${tagFilter === null ? 'active' : ''}`} onClick={() => setTagFilter(null)}>All</button>\n          {tags.map(tag => (\n            <button key={tag} className={`tag ${tagFilter === tag ? 'active' : ''}`} onClick={() => setTagFilter(tag)}>{tag}</button>\n          ))}\n        </div>\n      </div>\n      {Object.keys(postsByYear).sort((a, b) => (b - a)).map(year => (\n        <section className=\"container\" key={year}>\n          {(tagFilter === null || postsByYear[year].filter(post => (post.tags || []).includes(tagFilter)).length > 0) && (\n            <h2 className=\"year\">{year}</h2>\n          )}\n          <div className=\"posts\">\n            {postsByYear[year].filter(post => tagFilter === null || (post.tags || []).includes(tagFilter)).map(post => (\n              <PostListItem key={post.title} title={post.title} date={post.date} />\n            ))}\n          </div>\n        </section>\n      ))}\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/content/\" } },\n      sort:{frontmatter: {date:DESC} }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMM DD\")\n            year:date(formatString:\"YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Posts","const config = {\n  siteTitle: 'Chandrashekhar Tripathi',\n  siteUrl: 'https://tripathics.github.io/',\n  siteLogo: '/logo.png',\n  description:\n    'CS Undergrad at NIT Arunachal Pradesh. This is my homepage.',\n}\n\nexport default config\n"],"names":["slugify","str","match","map","x","toLowerCase","join","Heading","_ref","id","title","pageLink","extLink","extLinkText","React","className","href","target","rel","Link","to","PageTitle","_ref2","_id","PostListItem","date","data","allMarkdownRemark","posts","edges","edge","node","frontmatter","tagFilter","setTagFilter","postsByYear","reduce","acc","post","year","push","tags","forEach","tag","includes","sort","Helmet","config","siteTitle","onClick","key","Object","keys","a","b","filter","length","siteUrl","siteLogo","description"],"sourceRoot":""}