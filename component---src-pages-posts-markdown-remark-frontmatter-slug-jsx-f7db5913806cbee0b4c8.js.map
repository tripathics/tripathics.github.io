{"version":3,"file":"component---src-pages-posts-markdown-remark-frontmatter-slug-jsx-f7db5913806cbee0b4c8.js","mappings":"mMAKe,SAASA,EAAiB,GAErC,IAFqC,KACvCC,GACD,EACC,MAAM,eAAEC,GAAmBD,GACrB,YAAEE,EAAW,KAAEC,EAAI,gBAAEC,GAAoBH,GACzC,IAAEI,EAAG,cAAEC,EAAa,MAAEC,EAAK,OAAEC,GAAWN,EAAYO,KAC1D,OACE,uBAAKC,UAAU,kBACb,gBAAC,IAAM,CAACC,MAAUT,EAAYS,MAAK,MAAMC,EAAAA,EAAAA,YAEzC,0BAAQF,UAAU,kBAChB,0BAAKR,EAAYS,OACjB,2BAASD,UAAU,WAChBL,GAAO,yBAAIA,GACXC,GACC,gCACE,2CACA,0BAAKA,EAAcO,MAAM,KAAKC,KAAI,CAACC,EAAMC,IACvC,sBAAIC,IAAKD,GAAID,OAIlBR,GACC,gCACE,8CACA,0BAAKA,EAAMM,MAAM,KAAKC,KAAI,CAACC,EAAMC,IAC/B,sBAAIC,IAAKD,GAAID,OAIlBP,GACC,gCACE,2EACA,0BAAKA,EAAOK,MAAM,KAAKC,KAAI,CAACC,EAAMC,IAChC,sBAAIC,IAAKD,GAAID,SAOvB,wBAAML,UAAU,QACd,yBAAOA,UAAU,aACf,uBAAKA,UAAU,eACb,+CACA,uBAAKA,UAAU,MAAMQ,wBAAyB,CAAEC,OAAQf,OAG5D,2BAASM,UAAU,YAAYQ,wBAAyB,CAAEC,OAAQhB,MAI1E,C","sources":["webpack://homepage-react/./src/pages/posts/{markdownRemark.frontmatter__slug}.jsx"],"sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport config from \"../../utils/config\"\nimport { graphql } from \"gatsby\"\n\nexport default function BlogPostTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html, tableOfContents } = markdownRemark\n  const { txt, prerequisites, setup, lesson } = frontmatter.hero\n  return (\n    <div className=\"blog-component\">\n      <Helmet title={`${frontmatter.title} | ${config.siteTitle}`} />\n\n      <header className=\"head-container\">\n        <h1>{frontmatter.title}</h1>\n        <section className=\"segment\">\n          {txt && <p>{txt}</p>}\n          {prerequisites && (\n            <>\n              <h4>Prerequisites</h4>\n              <ul>{prerequisites.split(';').map((item, i) => (\n                <li key={i}>{item}</li>\n              ))}</ul>\n            </>\n          )}\n          {setup && (\n            <>\n              <h4>What you'll need</h4>\n              <ul>{setup.split(';').map((item, i) => (\n                <li key={i}>{item}</li>\n              ))}</ul>\n            </>\n          )}\n          {lesson && (\n            <>\n              <h4>After reading this article, you'll be able to</h4>\n              <ul>{lesson.split(';').map((item, i) => (\n                <li key={i}>{item}</li>\n              ))}</ul>\n            </>\n          )}\n        </section>\n      </header>\n\n      <main className=\"grid\">\n        <aside className=\"container\">\n          <div className=\"toc-sidebar\">\n            <h2>Table of contents</h2>\n            <div className=\"toc\" dangerouslySetInnerHTML={{ __html: tableOfContents }} />\n          </div>\n        </aside>\n        <article className=\"container\" dangerouslySetInnerHTML={{ __html: html }} />\n      </main>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      tableOfContents(\n        maxDepth: 3\n      )\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        hero {\n          txt\n          prerequisites\n          setup\n          lesson\n        }\n      }\n    }\n  }\n`"],"names":["BlogPostTemplate","data","markdownRemark","frontmatter","html","tableOfContents","txt","prerequisites","setup","lesson","hero","className","title","config","split","map","item","i","key","dangerouslySetInnerHTML","__html"],"sourceRoot":""}